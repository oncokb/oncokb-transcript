
entity Transcript {
    ensemblTranscriptId String,
    canonical Boolean required,
    ensemblProteinId String,
    referenceSequenceId String,
    description String
}

entity EnsemblGene {
    referenceGenome String required,
    ensemblGeneId String required,
    canonical Boolean required,
    chromosome String required,
    start Integer required,
    end Integer required,
    strand Integer required
}

entity GenomeFragment {
    chromosome String,
    start Integer,
    end Integer,
    strand Integer,
    type GenomeFragmentType
}

enum GenomeFragmentType {
	GENE,
	EXON,
    FIVE_PRIME_UTR,
    THREE_PRIME_UTR
}

entity Sequence {
    sequenceType SequenceType
    sequence TextBlob
}

enum SequenceType {
	PROTEIN, CDNA
}

entity Drug {
    name TextBlob
    code String
    semanticType TextBlob
}

entity DrugSynonym {
    name TextBlob
}

entity Info {
    type InfoType unique required
    value String
    lastUpdated Instant
}

enum InfoType {
    NCIT_VERSION,
    GENE_LAST_UPDATED
}

entity Gene {
    entrezGeneId Integer
    hugoSymbol String
}

entity GeneAlias {
    name String
}

relationship OneToMany {
	Drug{synonyms} to DrugSynonym
	Gene to GeneAlias
	Gene to EnsemblGene
    Transcript{fragments} to GenomeFragment{transcript}
    EnsemblGene to Transcript
    Transcript to Sequence
}

service * with serviceClass
dto Transcript with mapstruct
skipClient *

