name: After master commit

on:
  push:
    branches:
      - master

jobs:
  check-version-level-and-update:
    if: github.repository == 'oncokb/oncokb-curation'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: 'Update Version Level'
        run: |
          git pull
          VERSION_LEVEL=$(cat .version-level | tr "[:upper:]" "[:lower:]")

          RELEASE_DRAFTER_MINOR='NEXT_MINOR_VERSION'
          RELEASE_DRAFTER_PATCH='NEXT_PATCH_VERSION'

          if [[ $VERSION_LEVEL == 'minor' ]]; then
          sed -i "s/$RELEASE_DRAFTER_PATCH/$RELEASE_DRAFTER_MINOR/gi" .github/release-drafter.yml
          fi

          if [[ $VERSION_LEVEL == 'patch' ]]; then
          sed -i "s/$RELEASE_DRAFTER_MINOR/$RELEASE_DRAFTER_PATCH/gi" .github/release-drafter.yml
          fi

          CHANGED=$(git diff --name-only HEAD --)
          if [ -n "$CHANGED" ]
          then
            git config user.name oncokb-bot
            git config user.email dev.oncokb@gmail.com
            git add .
            git commit -m "Update action files to align the version level to $VERSION_LEVEL"
            git push
          fi


  update-pom:
    needs: [check-version-level-and-update]
    if: github.repository == 'oncokb/oncokb-curation'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@master"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: 'Get next semantic versions'
        id: semvers
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.tag }}

      - name: 'Setup Java'
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: 'Get Current Version Level'
        id: 'version-level'
        run: |
          VERSION_LEVEL=$(cat .version-level | tr "[:upper:]" "[:lower:]")
          echo "::set-output name=VERSION_LEVEL::$VERSION_LEVEL"
      - name: 'Update Pom'
        env:
          NEW_VERSION: ${{ steps.version-level.outputs.VERSION_LEVEL == 'minor' && steps.semvers.outputs.minor || steps.semvers.outputs.patch}}
        run: |
          git pull
          mvn --batch-mode versions:set -DnewVersion=${NEW_VERSION} -DgenerateBackupPoms=false

          CHANGED=$(git diff --name-only HEAD --)
          if [ -n "$CHANGED" ]
          then
            git config user.name oncokb-bot
            git config user.email dev.oncokb@gmail.com
            git add .
            git commit -m 'Update pom version'
            git push
          fi
